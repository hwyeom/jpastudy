plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.1.4'
	//querydsl
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
java {
	sourceCompatibility = '11'
}

//def querydslVersion = '5.0.0'
//query dsl 1
//ext["hibernate.version"] = "5.6.5.Final"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	// queryDSL 설정
//	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// hibernate 쿼리 파라미터 보여줌 개발 환경 사용 할 것
	implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6")
	// validate
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// JPA fetch = LAZY 설정 시 Proxy 객체 Json 오류 발생 해결방법 Hivernate5 모듈로 해결
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

	// QueryDSL
//	implementation "com.querydsl:querydsl-jpa:5.0.0"
//	implementation "com.querydsl:querydsl-apt:5.0.0"
//	implementation "com.querydsl:querydsl-core:${queryDslVersion}"
	// 추가 ↓
//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// ↑
	// queryDSL 설정
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

}

tasks.named('test') {
	useJUnitPlatform()
}

//def generatedDir =  "src/main/generated"

////--------------------queryDSL 관련 추가----------------------------
// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}